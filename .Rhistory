# Carga de bibliotecas
library(sf)
library(raster)
library(dplyr)
library(spData)
library(leaflet)
library(plotly)
library(DT)
provincias <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ign/delimitacion-territorial-administrativa/cr_provincias_simp_wgs84.geojson",
quiet = TRUE
)
plot(
provincias$geometry,
extent = extent(-86,-82.3, 8, 11.3),
main = "Provincias de Costa Rica",
axes = TRUE,
graticule = TRUE
)
cantones <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ign/delimitacion-territorial-administrativa/cr_cantones_simp_wgs84.geojson",
quiet = TRUE
)
# Mapa de la capa de cantones
plot(
cantones$geometry,
extent = extent(-86,-82.3, 8, 11.3),
main = "Cantones de Costa Rica",
axes = TRUE,
graticule = TRUE
)
asp <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/sinac/asp/asp-wgs84.geojson",
quiet = TRUE
)
plot(
asp$geometry,
extent = extent(-86,-82.3, 8, 11.3),
main = "Áreas silvestres protegidas (ASP) de Costa Rica",
axes = TRUE,
graticule = TRUE
)
aerodromos <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/ign/aerodromos/aerodromos-wgs84.geojson",
quiet = TRUE
)
plot(
aerodromos$geometry,
extent = extent(-86,-82.3, 8, 11.3),
main = "Aeródromos de Costa Rica",
axes = TRUE,
graticule = TRUE
)
viperidos <-
st_read(
"https://raw.githubusercontent.com/gf0604-procesamientodatosgeograficos/2021i-datos/main/gbif/viperidae-cr-registros.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude",
"Y_POSSIBLE_NAMES=decimalLatitude"
),
quiet = TRUE
)
# Asignación del sistema de coordenadas
st_crs(viperidos) = 4326
plot(
viperidos$geometry,
pch = 16,
extent = extent(-86,-82.3, 8, 11.3),
main = "Registros de Viperidae (tobobas) en Costa Rica",
col = "green",
axes = TRUE,
graticule = TRUE
)
limon <- provincias[provincias$provincia == "Limón", ]
aerodromos_limon <- aerodromos[limon, , op = st_within]
# Mapa de aeródromos
plot(
limon$geometry,
main = "Aeródromos de Limón (1)",
axes = TRUE,
graticule = TRUE,
reset = FALSE
)
plot(aerodromos_limon$geometry, pch=16, add = TRUE)
limon <-
provincias %>%
filter(provincia == "Limón")
# Selección de los aeródromos ubicados en Limón (espacial)
aerodromos_limon <-
aerodromos %>%
filter(st_within(x = ., y = limon, sparse = FALSE))
plot(
limon$geometry,
main = "Aeródromos de Limón (2)",
axes = TRUE,
graticule = TRUE,
reset = FALSE
)
plot(aerodromos_limon$geometry, pch = 16, add = TRUE)
# Mapa de ASP contenidas en Limón
plot(
limon$geometry,
main = "ASP contenidas en Limón",
axes = TRUE,
graticule = TRUE,
reset = FALSE
)
plot(asp_limon$geometry, col = "green", add = TRUE)
# Selección de las ASP intersecadas con Limón
asp_limon <-
asp %>%
filter(st_intersects(x = limon, y = ., sparse = FALSE))
plot(
limon$geometry,
main = "ASP intersecadas con Limón",
axes = TRUE,
graticule = TRUE,
reset = FALSE
)
plot(asp_limon$geometry, col = "green", add = TRUE)
asp_fuera_limon <-
asp %>%
filter(st_disjoint(x = limon, y = ., sparse = FALSE))
plot(
provincias$geometry,
extent = extent(-86,-82.3, 8, 11.3),
main = "ASP ubicadas fuera de Limón",
axes = TRUE,
graticule = TRUE,
reset = FALSE
)
plot(asp_fuera_limon$geometry, col = "green", add = TRUE)
terciopelos <-
viperidos %>%
filter(species == "Bothrops asper")
plot(
terciopelos$geometry,
pch = 16,
main = "Registros de terciopelos (Bothrops asper) en Costa Rica",
col = "green",
axes = TRUE,
graticule = TRUE
)
# Cruce de datos espaciales con la tabla de cantones, para obtener el nombre del cantón
terciopelos <-
terciopelos %>%
st_join(cantones["canton"])
# Despliegue de los datos cruzados
terciopelos %>%
st_drop_geometry() %>%
slice(1:10) %>%
select(stateProvince, canton, locality)
q()
